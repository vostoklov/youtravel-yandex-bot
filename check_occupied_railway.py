#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Railway
"""
import asyncio
import asyncpg
import os
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

async def check_occupied_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Railway
        conn = await asyncpg.connect(os.getenv('DATABASE_URL'))
        
        print("üîç –ê–Ω–∞–ª–∏–∑ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        users = await conn.fetch('''
            SELECT user_id, email, inn, promo_code, created_at, completed_at 
            FROM users 
            ORDER BY created_at DESC
        ''')
        
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {len(users)}")
        
        if users:
            print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            print("-" * 80)
            for user in users:
                status = '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω' if user['completed_at'] else '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ'
                date = user['created_at'].strftime('%d.%m %H:%M')
                email = user['email'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'
                inn = user['inn'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'
                promo = user['promo_code'] or '–Ω–µ—Ç'
                print(f'ID: {user["user_id"]} | {email} | {status} | {date}')
                print(f'    –ò–ù–ù: {inn} | –ü—Ä–æ–º–æ: {promo}')
                print()
        
        # –ê–Ω–∞–ª–∏–∑ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print(f"\nüîí –ê–Ω–∞–ª–∏–∑ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
        print("-" * 80)
        
        # –ó–∞–Ω—è—Ç—ã–µ email
        occupied_emails = []
        occupied_inns = []
        occupied_promos = []
        
        for user in users:
            if user['email']:
                occupied_emails.append(user['email'])
            if user['inn']:
                occupied_inns.append(user['inn'])
            if user['promo_code']:
                occupied_promos.append(user['promo_code'])
        
        print(f"üìß –ó–∞–Ω—è—Ç—ã–µ email ({len(occupied_emails)}):")
        for email in occupied_emails:
            print(f"   ‚Ä¢ {email}")
        
        print(f"\nüè¢ –ó–∞–Ω—è—Ç—ã–µ –ò–ù–ù ({len(occupied_inns)}):")
        for inn in occupied_inns:
            print(f"   ‚Ä¢ {inn}")
        
        print(f"\nüéüÔ∏è –ó–∞–Ω—è—Ç—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã ({len(occupied_promos)}):")
        for promo in occupied_promos:
            print(f"   ‚Ä¢ {promo}")
        
        await conn.close()
        
        print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(check_occupied_data())

#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è nzamaldinova@gmail.com
–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π!
"""
import os
import sys
import asyncio
import asyncpg
import config

async def fix_duplicates():
    """–£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å"""
    try:
        pool = await asyncpg.create_pool(
            dsn=config.DATABASE_URL,
            min_size=1,
            max_size=3
        )
        
        async with pool.acquire() as conn:
            print("\n" + "="*60)
            print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í")
            print("="*60)
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            print("\n1Ô∏è‚É£ –¢–ï–ö–£–©–ò–ï –ó–ê–ü–ò–°–ò:")
            current_records = await conn.fetch(
                """SELECT user_id, email, inn, promo_code, 
                          created_at, completed_at, step
                   FROM users 
                   WHERE email = 'nzamaldinova@gmail.com'
                   ORDER BY created_at"""
            )
            
            if not current_records:
                print("   ‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                await pool.close()
                return
            
            print(f"   –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(current_records)}\n")
            for i, record in enumerate(current_records, 1):
                print(f"   –ó–∞–ø–∏—Å—å #{i}:")
                print(f"   üë§ User ID: {record['user_id']}")
                print(f"   üéüÔ∏è Promo: {record['promo_code']}")
                print(f"   üè¢ INN: {record['inn']}")
                print(f"   üìç Step: {record['step']}")
                print(f"   üìÖ Created: {record['created_at']}")
                print()
            
            if len(current_records) <= 1:
                print("   ‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ—Ç, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                await pool.close()
                return
            
            # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–ø–∏—Å—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å —Å —Å–∞–º–æ–π —Ä–∞–Ω–Ω–µ–π –¥–∞—Ç–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Å –ò–ù–ù
            keep_record = None
            for record in current_records:
                if record['inn']:  # –ï—Å—Ç—å –ò–ù–ù
                    keep_record = record
                    break
            
            if not keep_record:
                keep_record = current_records[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é
            
            print(f"2Ô∏è‚É£ –ó–ê–ü–ò–°–¨ –î–õ–Ø –°–û–•–†–ê–ù–ï–ù–ò–Ø:")
            print(f"   üë§ User ID: {keep_record['user_id']}")
            print(f"   üéüÔ∏è Promo: {keep_record['promo_code']}")
            print(f"   üè¢ INN: {keep_record['inn']}")
            print(f"   üìÖ Created: {keep_record['created_at']}")
            
            # 3. –ó–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            delete_records = [r for r in current_records if r['user_id'] != keep_record['user_id']]
            
            if not delete_records:
                print("\n   ‚úÖ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                await pool.close()
                return
            
            print(f"\n3Ô∏è‚É£ –ó–ê–ü–ò–°–ò –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø ({len(delete_records)}):")
            promos_to_restore = []
            for record in delete_records:
                print(f"   ‚ùå User ID: {record['user_id']}, Promo: {record['promo_code']}")
                if record['promo_code'] and record['promo_code'] != keep_record['promo_code']:
                    promos_to_restore.append(record['promo_code'])
            
            # 4. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!")
            print(f"   –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {len(delete_records)} –∑–∞–ø–∏—Å–µ–π")
            print(f"   –ë—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ 1 –∑–∞–ø–∏—Å—å (User ID: {keep_record['user_id']})")
            print(f"\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ", end="")
            
            # –í Railway CLI –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞, –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º
            # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ:
            # response = input()
            # if response.lower() != 'yes':
            #     print("   ‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            #     await pool.close()
            #     return
            
            print("yes (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)")
            
            # 5. –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
            print(f"\n4Ô∏è‚É£ –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í...")
            for record in delete_records:
                await conn.execute(
                    'DELETE FROM users WHERE user_id = $1',
                    record['user_id']
                )
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω User ID: {record['user_id']}")
            
            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print(f"\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê:")
            remaining = await conn.fetch(
                """SELECT user_id, promo_code 
                   FROM users 
                   WHERE email = 'nzamaldinova@gmail.com'"""
            )
            
            print(f"   –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–µ–π: {len(remaining)}")
            for record in remaining:
                print(f"   ‚úÖ User ID: {record['user_id']}, Promo: {record['promo_code']}")
            
            # 7. –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Google Sheets
            print(f"\n6Ô∏è‚É£ –ü–†–û–ú–û–ö–û–î–´ –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –í GOOGLE SHEETS:")
            if promos_to_restore:
                for promo in promos_to_restore:
                    print(f"   üîÑ {promo} ‚Üí –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ 'available'")
            else:
                print("   ‚ÑπÔ∏è –ù–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
            
            print("\n" + "="*60)
            print("‚úÖ –ì–û–¢–û–í–û!")
            print("="*60)
        
        await pool.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(fix_duplicates())


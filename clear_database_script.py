#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–ó–∞–ø—É—Å–∫–∞—Ç—å —á–µ—Ä–µ–∑ Railway CLI: railway run python clear_database_script.py
"""
import asyncio
import asyncpg
import os
from datetime import datetime

async def clear_database():
    try:
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = await asyncpg.connect(os.getenv('DATABASE_URL'))
        
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –î–û –æ—á–∏—Å—Ç–∫–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –î–û –æ—á–∏—Å—Ç–∫–∏
        users_count = await conn.fetchval('SELECT COUNT(*) FROM users')
        reminders_count = await conn.fetchval('SELECT COUNT(*) FROM user_reminders')
        
        print(f"üìä –î–û –æ—á–∏—Å—Ç–∫–∏:")
        print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"   ‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {reminders_count}")
        
        print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        await conn.execute('DELETE FROM user_reminders')
        await conn.execute('DELETE FROM users')
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        users_after = await conn.fetchval('SELECT COUNT(*) FROM users')
        reminders_after = await conn.fetchval('SELECT COUNT(*) FROM user_reminders')
        
        print(f"üìä –ü–û–°–õ–ï –æ—á–∏—Å—Ç–∫–∏:")
        print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_after}")
        print(f"   ‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {reminders_after}")
        
        await conn.close()
        
        print(f"\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É —Ä–µ–∫–ª–∞–º—ã!")
        print(f"‚è∞ –í—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(clear_database())

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
"""
import asyncio
import asyncpg
import os
from datetime import datetime

async def check_database():
    try:
        conn = await asyncpg.connect(os.getenv('DATABASE_URL'))
        
        print('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL:')
        print('=' * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await conn.fetch('SELECT user_id, email, inn, promo_code, created_at FROM users ORDER BY created_at DESC')
        
        print(f'üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: {len(users)}')
        
        if users:
            print(f'\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:')
            print('-' * 80)
            for user in users:
                email = user['email'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'
                inn = user['inn'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'
                promo = user['promo_code'] or '–Ω–µ—Ç'
                date = user['created_at'].strftime('%d.%m %H:%M')
                print(f'ID: {user["user_id"]} | {email} | –ò–ù–ù: {inn} | –ü—Ä–æ–º–æ: {promo} | {date}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ò–ù–ù
        target_inn = '5405021087'
        existing_inn = await conn.fetchval('SELECT inn FROM users WHERE inn = $1', target_inn)
        
        print(f'\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ò–ù–ù {target_inn}:')
        if existing_inn:
            print(f'‚ùå –ò–ù–ù {target_inn} –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!')
        else:
            print(f'‚úÖ –ò–ù–ù {target_inn} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
        
        await conn.close()
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

if __name__ == "__main__":
    asyncio.run(check_database())
